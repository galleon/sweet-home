name: ðŸ”¨ Release package

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}

    env:
      BOOST_ROOT: ${{github.workspace}}/3rdparty/boost
      BOOST_URL: https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2
      SKDECIDE_SKIP_DEPS: 1

    steps:
      - name: Checkout scikit-decide source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo $BOOST_ROOT
          python -m pip install --upgrade pip
          pip install build
          python -m build --sdist --wheel

      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

  tests:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]
      fail-fast: true
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest tqdm

      - name: Download artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: wheels

      - name: Test with pytest
        run: |
          pip install --pre --find-links ./wheels/ "scikit-decide[all]"
          pytest -v -s tests/*

  upload:
    needs: [tests]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1.0.0
        with:
          name: wheels

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Upload artifacts ðŸ“¦ to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: wheels/*.whl
          tag: ${{ steps.get_version.outputs.VERSION }}
          overwrite: true
          file_glob: true

  deploy:
    needs: [upload]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: wheels

      - name: Publish distribution ðŸ“¦ to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_PASSWORD }}
        if: github.repository == 'galleon/sweet-home && env.PYPI_TOKEN != ''
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          packages_dir: wheels/

      - name: Publish distribution ðŸ“¦ to Test PyPI
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_PASSWORD }}
        if: env.TEST_PYPI_TOKEN != ''
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_PASSWORD }}
          packages_dir: wheels/
          repository_url: https://test.pypi.org/legacy/
